#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/internet-module.h"
#include "ns3/internet-apps-module.h"
#include "ns3/applications-module.h"
#include "ns3/csma-module.h"
using namespace ns3;
static void PingRtt(std::string context,Time rtt){
std::cout<<context<<" "<<rtt<<std::endl;
}
int main(int argc,char *argv[]){
CommandLine cmd;
cmd.Parse(argc,argv);
NodeContainer nodes;
nodes.Create(6);
InternetStackHelper stack;
stack.Install(nodes);
CsmaHelper csma;
csma.SetChannelAttribute("DataRate",DataRateValue(DataRate("1Mbps")));
csma.SetChannelAttribute("Delay",TimeValue(MilliSeconds(0.2)));
NetDeviceContainer devices=csma.Install(nodes);
Ipv4AddressHelper addresses;
addresses.SetBase("10.1.1.0","255.255.255.0");
Ipv4InterfaceContainer interfaces=addresses.Assign(devices);
uint16_t port=9;
PacketSinkHelper 
sink("ns3::UdpSocketFactory",Address(InetSocketAddress(Ipv4Address::GetAny(),port)));
ApplicationContainer sinkApp=sink.Install(nodes.Get(2));
sinkApp.Start(Seconds(0.0));
//sinkApp.Stop(Seconds(10.0));
OnOffHelper 
onoff("ns3::UdpSocketFactory",Address(InetSocketAddress(interfaces.GetAddress(2),port)));
onoff.SetConstantRate(DataRate("5Mbps"));
ApplicationContainer sendApp=onoff.Install(nodes.Get(0));
sendApp.Start(Seconds(6.0));
sendApp.Start(Seconds(10.0));
V4PingHelper ping=V4PingHelper(interfaces.GetAddress(2));
NodeContainer pingers;
pingers.Add(nodes.Get(0));
pingers.Add(nodes.Get(1));
ApplicationContainer apps;
apps=ping.Install(pingers);
apps.Start(Seconds(1.0));
apps.Start(Seconds(5.0));
Config::Connect("/NodeList/*/ApplicationList/*/$ns3::V4Ping/Rtt",MakeCallback(&PingRt
t));
AsciiTraceHelper ascii;
csma.EnableAsciiAll(ascii.CreateFileStream("lab2.tr"));
Simulator::Run();
Simulator::Destroy();
return 0;
}
