#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/internet-module.h"
#include "ns3/applications-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/traffic-control-module.h"

using namespace ns3;
int main(int argc,char *argv[]){
CommandLine cmd;
cmd.Parse(argc,argv);
NodeContainer nodes;
nodes.Create(3);
InternetStackHelper stack;
stack.Install(nodes);
PointToPointHelper p2p;
p2p.SetDeviceAttribute("DataRate",StringValue("1Mbps"));
p2p.SetChannelAttribute("Delay",TimeValue(MilliSeconds(1)));
NetDeviceContainer devices;
devices=p2p.Install(nodes.Get(0),nodes.Get(1));
NetDeviceContainer devices1;
devices1=p2p.Install(nodes.Get(1),nodes.Get(2));
Ipv4AddressHelper address;
address.SetBase("10.1.1.0","255.255.255.0");
Ipv4AddressHelper address1;
address1.SetBase("10.1.2.0","255.255.255.0");
Ipv4InterfaceContainer interfaces=address.Assign(devices);
interfaces=address1.Assign(devices1);
/*NetDeviceContainer devices;
devices=p2p.Install(nodes.Get(0),nodes.Get(1));
Ipv4AddressHelper address;
address.SetBase("10.1.1.0","255.255.255.0");
Ipv4InterfaceContainer interfaces=address.Assign(devices);
devices=p2p.Install(nodes.Get(1),nodes.Get(2));
address.SetBase("10.1.2.0","255.255.255.0");
interfaces=address.Assign(devices);*/
Ptr<RateErrorModel>em=CreateObject<RateErrorModel>();
em->SetAttribute("ErrorRate",DoubleValue(0.00002));
devices.Get(1)->SetAttribute("ReceiveErrorModel",PointerValue(em)); //ei
Ipv4GlobalRoutingHelper::PopulateRoutingTables();
uint16_t port=7;
Address localAddress(InetSocketAddress(Ipv4Address::GetAny(),port));
PacketSinkHelper packetSinkHelper("ns3::TcpSocketFactory",localAddress);
ApplicationContainer sinkApp=packetSinkHelper.Install(nodes.Get(2));
sinkApp.Start(Seconds(0.0));
sinkApp.Stop(Seconds(10.0));
uint32_t payloadSize=1448;
OnOffHelper onoff("ns3::TcpSocketFactory",Ipv4Address::GetAny());
onoff.SetAttribute("OnTime",StringValue("ns3::ConstantRandomVariable[Constant=1]"));
onoff.SetAttribute("OffTime",StringValue("ns3::ConstantRandomVariable[Constant=0]"));
onoff.SetAttribute("PacketSize",UintegerValue(payloadSize));
onoff.SetAttribute("DataRate",StringValue("2Mbps"));
AddressValue remoteAddress(InetSocketAddress(interfaces.GetAddress(1),port));
onoff.SetAttribute("Remote",remoteAddress);
/*ApplicationContainer sendApps;
sendApps.Add(onoff.Install(nodes.Get(0)));*/
ApplicationContainer sendApps=onoff.Install(nodes.Get(0));
sendApps.Start(Seconds(1.0));
sendApps.Stop(Seconds(10.0));
Simulator::Stop(Seconds(10.0));
AsciiTraceHelper ascii;
p2p.EnableAsciiAll(ascii.CreateFileStream("lab1.tr"));
Simulator::Run();
Simulator::Destroy();
return 0;
}
